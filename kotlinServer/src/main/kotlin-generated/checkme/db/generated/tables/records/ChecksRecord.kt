/*
 * This file is generated by jOOQ.
 */
package checkme.db.generated.tables.records


import checkme.db.generated.tables.Checks

import java.time.LocalDateTime

import javax.annotation.processing.Generated

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "catalog version:04",
        "schema version:04"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class ChecksRecord() : UpdatableRecordImpl<ChecksRecord>(Checks.CHECKS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var taskid: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var userid: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var date: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var result: JSONB?
        set(value): Unit = set(4, value)
        get(): JSONB? = get(4) as JSONB?

    open var status: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised ChecksRecord
     */
    constructor(id: Int? = null, taskid: Int? = null, userid: Int? = null, date: LocalDateTime? = null, result: JSONB? = null, status: String? = null): this() {
        this.id = id
        this.taskid = taskid
        this.userid = userid
        this.date = date
        this.result = result
        this.status = status
        resetChangedOnNotNull()
    }
}
