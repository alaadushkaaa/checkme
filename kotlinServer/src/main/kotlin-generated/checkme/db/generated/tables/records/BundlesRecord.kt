/*
 * This file is generated by jOOQ.
 */
package checkme.db.generated.tables.records


import checkme.db.generated.tables.Bundles

import javax.annotation.processing.Generated

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "catalog version:04",
        "schema version:04"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class BundlesRecord() : UpdatableRecordImpl<BundlesRecord>(Bundles.BUNDLES) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var tasks: JSONB?
        set(value): Unit = set(2, value)
        get(): JSONB? = get(2) as JSONB?

    open var isactual: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised BundlesRecord
     */
    constructor(id: Int? = null, name: String? = null, tasks: JSONB? = null, isactual: Boolean? = null): this() {
        this.id = id
        this.name = name
        this.tasks = tasks
        this.isactual = isactual
        resetChangedOnNotNull()
    }
}
